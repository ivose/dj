services:

  dj1_mariadb:
    image: mariadb:latest
    container_name: dj1_mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: myrpass
      MYSQL_DATABASE: dj1
      MYSQL_USER: ab_usr
      MYSQL_PASSWORD: mypass
    volumes:
      - ./data/mariadb:/var/lib/mysql
      # apt-get update && apt-get install -y mariadb-client
    networks:
      - app-network
    healthcheck:
      # ks. https://mariadb.com/kb/en/using-healthcheck-sh/
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  dj1_pma:
    image: phpmyadmin/phpmyadmin
    container_name: dj1_pma
    restart: unless-stopped
    environment:
      PMA_HOST: dj1_mariadb
      PMA_USER: ab_usr
      PMA_PASSWORD: mypass
    ports:
      - "8080:80"
    depends_on:
      - dj1_mariadb
    networks:
      - app-network

  dj1_postgres:
    image: postgres
    container_name: dj1_postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - app-network

  dj1_web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dj1_web
    restart: unless-stopped
    command: >
      sh -c "python3 manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./pr:/app
      - ./pr/static:/app/static
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

      - MYSQL_DATABASE=dj1
      - MYSQL_USER=ab_usr
      - MYSQL_PASSWORD=mypass

      #- MYSQL_ROOT_PASSWORD: myrpass
      #- MYSQL_DATABASE: dj1
      #- MYSQL_USER: ab_usr
      #- MYSQL_PASSWORD: mypass
    depends_on:
      # ks. https://docs.docker.com/compose/startup-order/
      dj1_mariadb:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge


# sudo chmod -R 755 ./data/db
# sudo chown -R $USER:$USER ./data/db --vist ei lÃ¤inud tarvis
# docker compose run web django-admin startproject pr .
# docker-compose down
# docker-compose up -d --build  --remove-orphans

#  clear; python3 p.py > out.txt;  docker-compose down; docker-compose up -d --build; docker-compose logs web
# none-pildid maha
# docker rmi -f $(docker images -f "dangling=true" -q)